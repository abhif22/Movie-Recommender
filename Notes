

   <div class="container" style="position: relative;margin-top: 1100px;">
    <div class="row">
      <h2  style="margin: auto;"><span class="badge badge-default">Recently Viewed</span></h2>
      <div class="col-md-12" style="position: relative;margin-left: 0%;margin-top: 30px;">
        <div class="owl-carousel owl-theme">
        <%for(i=0;i<recent_views.length;i++){%>
          <div class="item">
            <div class="card">
              <img class="card-img-top" src="http://image.tmdb.org/t/p/w154/<%=recent_views[i].poster_path%>" style="border: none; max-width: 100%;
    max-height: 100%;" alt="Card image cap">
              <div class="card-block">
                <a href="http://localhost:8080/explore/movies/<%=recent_views[i].id%>"><p class="card-text"><%=recent_views[i].title%></p></a>
              </div>
            </div>
          </div>
          <%}%>
        </div>
      </div>
    </div>
  </div>




<%= varname %> : for variables
<% Logic %>: for logic
<% include templates/header.ejs %>



<% if(errors){%>
        <% while(errors.length){%>
            <div class="alert alert-warning alert-dismissible fade show" role="alert">
              <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                <span aria-hidden="true">&times;</span>
              </button>
              <%= msg%>
            </div>
    <% } %>
    <% } %>

User.getUserByUsername(username,(err, existingUser)=>{
			if(err)
				throw err
			if(existingUser){
				req.flash('error_msg', 'UserName not Available')
				return res.redirect('/users/register')
			}
			else{
				User.createUser(newUser,(err,user)=>{
					if(err)
						throw err;
					console.log(user)
					req.flash('success_msg','You are Now Registered. Login Now')
					return res.redirect('/users/login')
				})
			}
		})

<div class="container" style="margin-top: 20%;">
	<%for(block=0;block<(data.length/3);block++){%>
		<div class="row">
		<%for(i=0;i<3&&(i+(block*3)<data.length);i++){%>
			<div class="col-md-10" style="margin-bottom:20px 20px;">
						<div class="card" style="width: 20rem;">
						  <img class="card-img-top" src="http://image.tmdb.org/t/p/w154/<%=data[i].poster_path%>" alt="Card image cap">
						  <div class="card-block">
						    <h4 class="card-title"><%=data[i+(block*3)].title%></h4>
						    <p class="card-text"><%=data[i+(block*3)].overview%></p>
						    <%for(j=0;j<data[i+(block*3)].genre_ids;j++){%>
						      	<span class="badge badge-warning"><%=data[i+(block*3)].genre_ids[j]%></span>
					        <%}%>
						    <a href="/explore/movies/<%=data[i+(block*3)].id%>" class="btn btn-primary">More Info</a>
						  </div>
						</div>
			</div>
		  <%}%>
		</div>
	<%}%>
</div>


For pagination

var maxResultsPerPage = 10,pageNo = req.params.page

Movie.find().skip(maxResultsPerPage*pageNo).limit(maxResultsPerPage).exec((err, movies)=>{
	if(err)
		return next(err)
	Movie.count().exec((err, count)=>{
		if(err)
			return next(err)
		return res.render('pageToRender',{
		movies: movies,
		pages: count/maxResultsPerPage
		})
	})
})


https://www.w3schools.com/php/php_ajax_livesearch.asp





FOR SIMILAR MOVIES

calculate similar movies from ipynb notebook
copy the file to root directory and name it as SimilarMovies.json
run script similarmovies_preprocess.js
ProcessedSimilarMoviesData.json is similar movies data


FOR RECOMMENDATIONS

calculate the recommendations for each users (LIMIT: 20 for each users)
save it to json format
write preprocess script
load the json data
and do it like in similar movies but use async waterfall models here


// Curently unable to login using various username which were persisted in db
because password in db is abc123 but when login is checked abc123 given via post request is hashed and then matched with abc123 and not hashed(abc123)